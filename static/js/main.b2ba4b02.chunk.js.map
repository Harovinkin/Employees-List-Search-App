{"version":3,"sources":["modules/api/endpoints.js","modules/api/actions.js","modules/api/selectors.js","hooks/useFetch.js","components/common/ProfileCard.js","components/common/ProfileGrid.js","modules/app/selectors.js","components/Employees/index.jsx","modules/app/actions.js","components/common/NavigationItem.js","components/common/Navigation.js","components/Jobs/index.jsx","App.js","modules/api/reducer.js","modules/app/reducer.js","modules/api/api.js","modules/api/saga.js","store.js","index.js"],"names":["ENDPOINTS","uri","method","API_ACTIONS","apiActions","endpoint","payload","type","toUpperCase","selectApiState","state","api","useFetch","dispatch","useDispatch","apiState","useSelector","shallowEqual","performFetch","useCallback","data","response","useMemo","camelCase","useStyles","makeStyles","theme","root","display","padding","avatar","alignItems","justifyContent","ProfileCard","src","title","subSpecialties","classes","Card","className","Avatar","alt","CardContent","content","Typography","component","variant","color","length","flexWrap","item","breakpoints","up","flexBasis","down","ProfileGrid","profiles","loading","Grid","container","justify","CircularProgress","map","profile","key","id","name","job","selectAppState","store","app","Employees","appState","useEffect","preparedData","Array","isArray","selectedJob","filter","employee","APP_ACTIONS","NavigationItem","jobId","action","ListItem","button","onClick","selected","ListItemText","primary","drawer","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","Navigation","services","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","AppBar","position","Toolbar","IconButton","aria-label","edge","noWrap","Hidden","smUp","implementation","Drawer","document","body","open","onClose","paper","ModalProps","keepMounted","xsDown","Jobs","flexGrow","App","INITIAL_STATE","Object","keys","reduce","acc","next","error","apiReducer","startsWith","inner","replace","stateActionMapping","appReducer","baseUrl","endpoints","this","fetch","generateRequest","json","onApiLoad","watchApiLoad","apiRootSaga","actionType","toLowerCase","put","takeEvery","all","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","apiSaga","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.b2ba4b02.chunk.js","sourcesContent":["export const JOBS = 'jobs';\r\nexport const EMPLOYEES = 'employees';\r\n\r\nconst ENDPOINTS = {\r\n    [JOBS]: {\r\n        uri: '/jobs',\r\n        method: 'GET'\r\n    },\r\n    [EMPLOYEES]: {\r\n        uri: '/employees',\r\n        method: 'GET'\r\n    }\r\n};\r\n\r\nexport default ENDPOINTS;\r\n","export const API_ACTIONS = {\r\n    FETCH_START: 'FETCH_START_',\r\n    FETCH_SUCCESS: 'FETCH_SUCCESS_',\r\n    FETCH_FAILURE: 'FETCH_FAILURE_'\r\n};\r\n\r\nexport const apiActions = {\r\n    fetch: (endpoint, payload) => ({\r\n        type: `${API_ACTIONS.FETCH_START}${endpoint.toUpperCase()}`,\r\n        payload\r\n    }),\r\n    fetchSuccess: (endpoint, payload) => ({\r\n        type: `${API_ACTIONS.FETCH_SUCCESS}${endpoint.toUpperCase()}`,\r\n        payload\r\n    }),\r\n    fetchFailure: (endpoint, payload) => ({\r\n        type: `${API_ACTIONS.FETCH_FAILURE}${endpoint.toUpperCase()}`,\r\n        payload\r\n    })\r\n};\r\n","export const selectApiState = state => state.api;","import {useCallback, useMemo} from 'react';\r\nimport camelCase from 'camelcase';\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux';\r\nimport {apiActions} from 'modules/api/actions';\r\nimport {selectApiState} from 'modules/api/selectors';\r\n\r\nconst useFetch = endpoint => {\r\n    const dispatch = useDispatch();\r\n    const apiState = useSelector(selectApiState, shallowEqual);\r\n\r\n    const performFetch = useCallback(data => dispatch(apiActions.fetch(endpoint, data)), [endpoint, dispatch]);\r\n    const response = useMemo(() => apiState[camelCase(endpoint)], [apiState, endpoint]);\r\n\r\n    return {response, performFetch};\r\n}\r\n\r\nexport default useFetch;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: '4px 24px'\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nexport default function ProfileCard({ src, title, subSpecialties }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <div className={classes.avatar}>\r\n          <Avatar alt={title} src={src} />\r\n        </div>\r\n        <div>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n              {(subSpecialties && subSpecialties.length > 0) ? subSpecialties : ' – '}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileCard.propTypes = {\r\n  src: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  subSpecialties: PropTypes.string\r\n}","import React from 'react';\r\nimport ProfileCard from './ProfileCard';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  item: {\r\n    padding: '10px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexBasis: '50%'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexBasis: '100%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexBasis: '33.33%'\r\n    },\r\n  }\r\n}));\r\n\r\nexport default function ProfileGrid({profiles = [], loading}) {\r\n  const classes = useStyles();\r\n\r\n  if (loading || !profiles) {\r\n    return (\r\n      <Grid container justify='center'>\r\n        <CircularProgress />\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {profiles\r\n        .map(profile => (\r\n          <div key={profile.id} className={classes.item}>\r\n            <ProfileCard\r\n              src={profile.avatar}\r\n              title={profile.name}\r\n              subSpecialties={profile.job}\r\n            />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}","export const selectAppState = store => store.app;","\r\nimport React, {useEffect, useMemo} from 'react';\r\nimport { EMPLOYEES } from 'modules/api/endpoints';\r\nimport useFetch from 'hooks/useFetch';\r\nimport ProfileGrid from 'components/common/ProfileGrid';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAppState } from 'modules/app/selectors';\r\n\r\nexport default function Employees() {\r\n    const {response, performFetch} = useFetch(EMPLOYEES);\r\n    const {loading, data} = response;\r\n    const appState = useSelector(selectAppState);\r\n\r\n    useEffect(() => {\r\n        performFetch();\r\n    }, [performFetch]);\r\n\r\n    const preparedData = useMemo(() => {\r\n        if (!Array.isArray(data)) {\r\n            return [];\r\n        }\r\n\r\n        if (!appState.selectedJob) {\r\n            return data;\r\n        }\r\n\r\n        return data.filter(employee => employee.job === appState.selectedJob);\r\n    }, [data, appState.selectedJob]);\r\n\r\n    return <ProfileGrid profiles={preparedData} loading={loading} />\r\n}","// Action\r\n\r\nexport const APP_ACTIONS = {\r\n    APP_FILTER_EMPLOYEES: 'APP_FILTER_EMPLOYEES'\r\n}\r\n\r\n// Action creator\r\n\r\nexport function filterEmployees(filterBy) {\r\n    return {\r\n        type: APP_ACTIONS.APP_FILTER_EMPLOYEES,\r\n        payload: filterBy\r\n    };\r\n}","import React, {useCallback} from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { filterEmployees } from 'modules/app/actions';\r\nimport {selectAppState} from 'modules/app/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function NavigationItem({ id, jobId, title}) {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(selectAppState);\r\n  const action = useCallback(() => {\r\n    dispatch(filterEmployees(jobId))\r\n  }, [jobId, dispatch])\r\n\r\n  return (\r\n    <ListItem button onClick={action} selected={jobId === appState.selectedJob}>\r\n      <ListItemText primary={title} />\r\n    </ListItem>\r\n  );\r\n}","import React, { useCallback } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ServiceItem from './NavigationItem';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n}));\r\n\r\nexport default function Navigation({ loading, services, title = '' }) {\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const handleDrawerToggle = useCallback(() => {\r\n    setMobileOpen(!mobileOpen);\r\n  }, [mobileOpen]);\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {loading || !services ? (\r\n          <Grid container justify='center'>\r\n            <CircularProgress />\r\n          </Grid>\r\n        ) : (\r\n          services.map(({ id, jobId, title }) => (\r\n            <ServiceItem key={id} jobId={jobId} title={title} />\r\n          ))\r\n        )}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar position='fixed' className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            edge='start'\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label='mailbox folders'>\r\n        <Hidden smUp implementation='css'>\r\n          <Drawer\r\n            container={() => document.body}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation='css'>\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant='permanent'\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { JOBS } from 'modules/api/endpoints';\r\nimport Navigation from 'components/common/Navigation';\r\nimport useFetch from 'hooks/useFetch';\r\n\r\nexport default function Jobs() {\r\n    const {response, performFetch} = useFetch(JOBS);\r\n    const {loading, data} = response;\r\n\r\n    useEffect(() => {\r\n        performFetch();\r\n    }, [performFetch]);\r\n\r\n    return <Navigation loading={loading} services={data} title={'Employees list search App'} />;\r\n}","import React from 'react';\r\nimport Employees from 'components/Employees';\r\nimport Jobs from 'components/Jobs';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Jobs />\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar}/>\r\n        <Employees />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import camelCase from 'camelcase';\r\nimport ENDPOINTS from 'modules/api/endpoints';\r\nimport { API_ACTIONS } from './actions';\r\n\r\nfunction initApiState() {\r\n    return Object.keys(ENDPOINTS).reduce((acc, next) => {\r\n        const inner = {\r\n            data: null,\r\n            loading: false,\r\n            error: null\r\n        };\r\n\r\n        acc[camelCase(next)] = inner;\r\n\r\n        return acc;\r\n    }, {});\r\n}\r\n\r\nconst INITIAL_STATE = initApiState();\r\n\r\nconst apiReducer = (state = INITIAL_STATE, action) => {\r\n    if (action.type.startsWith(API_ACTIONS.FETCH_START)) {\r\n        const inner = camelCase(action.type.replace(API_ACTIONS.FETCH_START, ''));\r\n\r\n        return {\r\n            ...state,\r\n            [inner]: {\r\n                ...state[inner],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        };\r\n    }\r\n\r\n    if (action.type.startsWith(API_ACTIONS.FETCH_SUCCESS)) {\r\n        const inner = camelCase(action.type.replace(API_ACTIONS.FETCH_SUCCESS, ''));\r\n\r\n        return {\r\n            ...state,\r\n            [inner]: {\r\n                ...state[inner],\r\n                data: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        };\r\n    }\r\n\r\n    if (action.type.startsWith(API_ACTIONS.FETCH_FAILURE)) {\r\n        const inner = camelCase(action.type.replace(API_ACTIONS.FETCH_FAILURE, ''));\r\n\r\n        return {\r\n            ...state,\r\n            [inner]: {\r\n                ...state[inner],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        };\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default apiReducer;","import { APP_ACTIONS } from 'modules/app/actions';\r\n\r\nfunction getInitialState() {\r\n    return {\r\n        selectedJob: null\r\n    };\r\n}\r\n\r\nconst INITIAL_STATE = getInitialState();\r\n\r\nconst stateActionMapping = {\r\n    [APP_ACTIONS.APP_FILTER_EMPLOYEES]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            selectedJob: action.payload\r\n        };\r\n    }\r\n}\r\n\r\nconst appReducer = (state = INITIAL_STATE, action) => {\r\n    return stateActionMapping[action.type] ? stateActionMapping[action.type](state, action) : state;\r\n}\r\n\r\nexport default appReducer;","import ENDPOINTS from 'modules/api/endpoints';\r\n\r\nconst BASE_URL = 'https://5f7998dbe402340016f9321f.mockapi.io/api/v1';\r\n\r\nclass Api {\r\n    constructor(baseUrl, endpoints) {\r\n        this.baseUrl = baseUrl;\r\n        this.endpoints = endpoints;\r\n    }\r\n\r\n    async generateRequest(endpoint, data) {\r\n        const {method, uri} = this.endpoints[endpoint];\r\n        \r\n        return fetch(`${this.baseUrl}${uri}`, {method, body: data});\r\n    }\r\n\r\n    async fetch(endpoint, data) {\r\n        const response = await this.generateRequest(endpoint, data);\r\n\r\n        return response.json();\r\n    }\r\n}\r\n\r\nexport default new Api(BASE_URL, ENDPOINTS)","import {takeEvery, put, all} from 'redux-saga/effects';\r\nimport api from 'modules/api/api';\r\nimport {apiActions, API_ACTIONS} from 'modules/api/actions';\r\n\r\nexport function* onApiLoad({payload, type}) {\r\n    const actionType = type.replace(API_ACTIONS.FETCH_START, '').toLowerCase();\r\n\r\n    try {\r\n        const response = yield api.fetch(actionType, payload);\r\n\r\n        yield put(apiActions.fetchSuccess(actionType, response));\r\n    } catch(e) {\r\n        yield put(apiActions.fetchFailure(actionType, e));\r\n    }\r\n}\r\n\r\nexport function* watchApiLoad() {\r\n    yield takeEvery(action => action.type.startsWith(API_ACTIONS.FETCH_START), onApiLoad);\r\n}\r\n\r\nexport default function* apiRootSaga() {\r\n    yield all([\r\n        watchApiLoad()\r\n    ]);\r\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport apiReducer from 'modules/api/reducer';\r\nimport appReducer from 'modules/app/reducer';\r\nimport apiSaga from 'modules/api/saga';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose;\r\n\r\nconst reducers = combineReducers({\r\n    api: apiReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(apiSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {Provider} from 'react-redux';\r\nimport App from 'App';\r\nimport store from 'store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <CssBaseline />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}